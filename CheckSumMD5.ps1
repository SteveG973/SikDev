function Get-MD5
{
    <#
    .NOTES
    --------------------------------------------------------------------------------
    Code generated by:  MS Visual Studio Code
    Generated on:       01/01/2017
    Generated by:       SP@2018
    Organization:       SIK-NET
    --------------------------------------------------------------------------------
	# This Get-MD5 function sourced from:
    # http://blogs.msdn.com/powershell/archive/2006/04/25/583225.aspx
	.SYNOPSIS
    Generate MD5 CheckSum
    .DESCRIPTION
    Generate the file's MD5 CheckSum

    Versioning:
    v1.0    01/01/2017  SP@:    Creation
    V1.1    09/07/2019  SP@:    Format Parameter to match with Get-ChildItem Property
                                Get file list from Pipeline
                                Define Output to show only Name and MD5 Column when Name is provided

    
    .PARAMETER FullName
    The full path of the file to do the checksum
    .PARAMETER Name
    File Name
    .EXAMPLE
    Get-MD5 -FullName "C:\testfile.txt"
    Get-MD5 "C:\testfile.txt"

    It will calculate the MD5's checksum for testfile.txt
    .EXAMPLE
    Get-ChildItem -File | Get-MD5

    It will calculate the MD5's checksum of all files given by Get-ChildItem
    #>

    [Cmdletbinding()]
    param (
        [Parameter(Mandatory = $true,Position = 0,ValueFromPipelineByPropertyName = $true)][String]$FullName,
        [Parameter(Mandatory = $false,ValueFromPipelineByPropertyName = $true)][String]$Name
    )
    Process
    {
        $HashAlgorithm = New-Object -TypeName System.Security.Cryptography.MD5CryptoServiceProvider
        $Stream = [System.IO.File]::OpenRead($FullName)
        try {
            $HashByteArray = $HashAlgorithm.ComputeHash($Stream)
        } finally {
            $Stream.Dispose()
        }
        $PSObject = New-Object -TypeName psobject 
                $PSObject | Add-Member -MemberType NoteProperty -Name FullName -Value $FullName
                $PSObject | Add-Member -MemberType NoteProperty -Name MD5 -Value $([System.BitConverter]::ToString($HashByteArray).ToLowerInvariant() -replace '-','')
                if ( $Name -ne $null ) {
                    $PSObject | Add-Member -MemberType NoteProperty -Name Name -Value $Name
                    # Define Default properties
                    $DefaultProperties = @('Name', 'MD5')
                    $DefaultDisplayPropertySet = New-Object System.Management.Automation.PSPropertySet('DefaultDisplayPropertySet',[String[]]$DefaultProperties)
                    $PSStandardMembers = [System.Management.Automation.PSMemberInfo[]]@($DefaultDisplayPropertySet)
                    $PSObject | Add-Member MemberSet PSStandardMembers $PSStandardMembers
                }                

        return $PSObject
    }
}
